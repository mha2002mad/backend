# Generated by Django 5.1.3 on 2025-03-07 17:51

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='admins',
            fields=[
                ('username', models.CharField(primary_key=True, serialize=False, unique=True)),
                ('passWord', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='courses',
            fields=[
                ('courseID', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('courseName', models.CharField(unique=True)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('semster', models.IntegerField(choices=[(1, '1'), (2, '2')])),
            ],
        ),
        migrations.CreateModel(
            name='departments',
            fields=[
                ('departmentID', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('departmentName', models.CharField(unique=True)),
                ('dean', models.CharField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='classes',
            fields=[
                ('date', models.DateField(auto_created=True)),
                ('classID', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('classSessionStart', models.TimeField(validators=[django.core.validators.MinValueValidator(datetime.time(8, 30)), django.core.validators.MaxValueValidator(datetime.time(18, 0))])),
                ('classSessionEnd', models.TimeField(validators=[django.core.validators.MaxValueValidator(datetime.time(20, 0))])),
                ('tutorPresent', models.IntegerField(choices=[(0, '0'), (1, '1')])),
                ('takenCourse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='takenCourse', to='backendApp.courses')),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='byDepartment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='byDepartment', to='backendApp.departments'),
        ),
        migrations.CreateModel(
            name='students',
            fields=[
                ('studentID', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('studentFirstName', models.CharField()),
                ('studentLastName', models.CharField()),
                ('major', models.CharField(max_length=32)),
                ('fromDepartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromDepartment', to='backendApp.departments')),
                ('stage', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
            ],
        ),
        migrations.CreateModel(
            name='studentCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentUserName', models.CharField(unique=True)),
                ('studentPassword', models.CharField()),
                ('forStudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forStudent', to='backendApp.students', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='leaveRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forDate', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(2025, 3, 7))])),
                ('reason', models.TextField()),
                ('statusI', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('rejected', 'rejected')], default='pending')),
                ('statusII', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('rejected', 'rejected')], default='pending')),
                ('forClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forClass', to='backendApp.classes')),
                ('byStudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='byStudent', to='backendApp.students')),
            ],
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present', models.IntegerField(choices=[(0, '0'), (1, '1')])),
                ('ofClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofClass', to='backendApp.classes')),
                ('ofStudent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ofStudent', to='backendApp.students')),
            ],
        ),
        migrations.CreateModel(
            name='timeTable',
            fields=[
                ('timeTableID', models.UUIDField(default=1, primary_key=True, serialize=False, unique=True)),
                ('stage', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='backendApp.departments')),
            ],
        ),
        migrations.CreateModel(
            name='timeTableclassDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('sunday', 'sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday')])),
                ('sessionStart', models.TimeField(validators=[django.core.validators.MinValueValidator(datetime.time(8, 30)), django.core.validators.MaxValueValidator(datetime.time(18, 0))])),
                ('sessionEnd', models.TimeField(validators=[django.core.validators.MaxValueValidator(datetime.time(20, 0))])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course', to='backendApp.courses')),
                ('timeTableSelector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeTableSelector', to='backendApp.timetable')),
            ],
        ),
        migrations.CreateModel(
            name='tutors',
            fields=[
                ('tutorID', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('tutorFirstName', models.CharField()),
                ('tutorLastName', models.CharField()),
                ('tutorEmail', models.EmailField(max_length=254, unique=True)),
                ('tutorDepartment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutorDepartment', to='backendApp.departments')),
            ],
        ),
        migrations.CreateModel(
            name='tutorCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorUserName', models.CharField(unique=True)),
                ('tutorPassword', models.CharField()),
                ('forTutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forTutor', to='backendApp.tutors', unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='taughtBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='taughtBy', to='backendApp.tutors'),
        ),
        migrations.AddField(
            model_name='classes',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutor', to='backendApp.tutors'),
        ),
    ]
